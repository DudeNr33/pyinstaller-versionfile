[tox]
envlist = {py27,py36}-tests

[testenv]
skip_install =
    {docs,lint,build,deploy,remove}: true

deps =
    {tests,cov}:    -r {toxinidir}/requirements.txt
    {tests,cov}:    pytest
    win:            pywin32
    cov:            coverage
    cov:            pytest-cov

    lint:           flake8
    lint:           flake8-junit-report

    docs:           sphinx

    build:          setuptools
    build:          check-manifest>=0.42

whitelist_externals =
    cmd

changedir:
    docs:           docs

commands_pre =
    lint:           cmd /c if not exist {envtmpdir}\testresults mkdir {envtmpdir}\testresults

    build:          cmd /c if exist build del /s /q build
    build:          cmd /c if exist dist del /s /q dist

commands =
    tests:          pytest \
    tests-cov:          --cov={envsitepackagesdir}/pkgtemplate \
    tests-cov:          --cov-branch \
    tests-cov:          --cov-report=html:{envtmpdir}/testresults/htmlcov \
    tests:              --junitxml={envtmpdir}/testresults/junit.{envname}.xml \
    tests:              --junit-prefix={envname} \
    tests:              {posargs:test}

    lint:           flake8 src/ --output-file={envtmpdir}/testresults/flake8report.txt

    docs:           sphinx-build -b html . {envtmpdir}/docs

    build:          check-manifest
    build:          python setup.py sdist bdist_wheel

commands_post =
    lint:           flake8_junit {envtmpdir}/testresults/flake8report.txt {envtmpdir}/testresults/flake8junit.xml

# Pytest configuration
[pytest]
junit_family = xunit2

# Coverage measurement configuration
[coverage:run]
source = ./src
omit =
    */_empty
    */docs/*
    */*.txt
    */*.md
    */setup.py
    */LICENSE

# Flake8 configuration
[flake8]
max-line-length = 120
max-complexity = 10

# check_manifest configuration
[check-manifest]
ignore =
    docs/_build/**
